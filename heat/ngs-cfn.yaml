HeatTemplateFormatVersion: '2012-12-12'

Description: "This template instantiates the Bioplatforms Australia Training
  Platform. This will launch a single virtual machine on the NeCTAR Research
  Cloud using the latest virtual machine image."

Parameters:
  KeyName:
    Description: "Name of an existing key pair to access the instance."
    Label: "Key Name"
    Type: "String"
  InstanceType:
    Description: "Size of the instance to be created."
    Label: "Instance Type"
    Type: "String"
    Default: "m1.small"
    AllowedValues: 
      - "m1.small" 
      - "m1.medium" 
      - "m1.large"
      - "m1.xlarge" 
      - "m1.xxlarge"
      - "m2.xsmall"
      - "m2.small"
      - "m2.large"
      - "m2.xlarge"
  InstanceCount:
    Description: "Number of instances to launch."
    Label: "Instance Count"
    Type: "Number"
  ImageName:
    Description: "ID of the NeCTAR image to be used for the instance."
    Label: "Image Name"
    Type: "String"
    Default: "BTP-2016-01-25"
    AllowedValues:
      - "BTP-2016-01-25"
  AvailabilityZone:
    Description: "NeCTAR availability zone where to launch the instance."
    Label: "Availability Zone"
    Type: "String"
    Default: "monash-01"
    AllowedValues: 
      - "monash"
      - "monash-01"
      - "monash-02"
      - "melbourne"
      - "melbourne-np"
      - "melbourne-qh2"
      - "tasmania"
      - "tasmania-s"
      - "intersect"
      - "intersect-01"
      - "intersect-02"
      - "sa"
      - "pawsey"
      - "pawsey-01"
      - "QRIScloud"
      - "NCI"
  TraineePassword:
    Description: "Password for the local ubuntu user."
    Label: "Trainee Password"
    Type: "String"
    NoEcho: "True"

Mappings:
  BTPImageName:
    "BTP-2016-01-25": { BTPImageID: 9c7fd8ac-5cfe-4067-aae3-82e53a49def3 }

Resources:
  NGSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable ssh (port 22) access"
      SecurityGroupIngress:
        - IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "4000"
          ToPort: "4000"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "udp"
          FromPort: "4738"
          ToPort: "4738"
          CidrIp: "0.0.0.0/0"
      
  NGSInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId:
        Fn::FindInMap:
          - BTPImageName
          - { Ref: ImageName}
          - BTPImageID
      InstanceType: { Ref: InstanceType }
      KeyName: { Ref: KeyName }
      SecurityGroups:
        - { Ref: NGSSecurityGroup }
      KeyName: { Ref: KeyName }
      AvailabilityZone: { Ref: AvailabilityZone }
      UserData:
        Fn::Base64:
          Fn::Replace:
            - trainee_password: { Ref: TraineePassword }
            - |
              #!/bin/bash
              if [ ! -e "/tmp/btp-workshop-ngs" ]; then
                  cd /tmp;
                  git clone --recurse-submodules https://github.com/BPA-CSIRO-Workshops/btp-workshop-ngs.git;
              fi
              cd /tmp/btp-workshop-ngs;

              # Datasets
              find . -type f -name 'data.yaml' | while read module; do
                  module_name=`echo $module | awk -F '/' '{ print $2 }'`;
                  cat > /etc/puppet/$module_name-datasets-hiera.yaml << EOF
              ---
              :backends:
                - yaml
              :yaml:
                :datadir: '/etc/puppet/'
              :hierarchy:
                - $module_name-datasets
              EOF
                  cp $module /etc/puppet/$module_name-datasets.yaml;
                  puppet apply --verbose --parser future orchestration/puppet/btp-datasets.pp --hiera_config=/etc/puppet/$module_name-datasets-hiera.yaml;
              done;    
              echo "Setting password for trainee user ..."
              echo -e "trainee:trainee_password" | sudo chpasswd

